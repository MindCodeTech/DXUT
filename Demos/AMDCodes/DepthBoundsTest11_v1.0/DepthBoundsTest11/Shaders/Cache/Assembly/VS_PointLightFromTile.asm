//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T vs_5_0 /O1 /E VS_PointLightFromTile
//    Shaders\Source\ShadingPasses.hlsl /Fo
//    Shaders\Cache\Object\Release\VS_PointLightFromTile.obj /Fe
//    Shaders\Cache\Error\VS_PointLightFromTile.txt /Fc
//    Shaders\Cache\Assembly\VS_PointLightFromTile.asm
//
//
// Buffer Definitions: 
//
// cbuffer cbPointLightArray
// {
//
//   struct POINT_LIGHT_STRUCTURE
//   {
//       
//       float4 vColor;                 // Offset:    0
//       float4 vWorldSpacePositionAndRange;// Offset:   16
//
//   } g_Light[50];                     // Offset:    0 Size:  1600
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPointLightArray                 cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// NDCPOSITION              0   xyz         0     NONE  float   xyz 
// SV_VERTEXID              0   x           1   VERTID   uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// LIGHTPOSITIONANDRANGE     0   xyzw        0     NONE  float   xyzw
// LIGHTCOLOR               0   xyz         1     NONE  float   xyz 
// SV_POSITION              0   xyzw        2      POS  float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[100], dynamicIndexed
dcl_input v0.xyz
dcl_input_sgv v1.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_temps 1
ushr r0.x, v1.x, l(2)
ishl r0.x, r0.x, l(1)
mov o0.xyzw, cb2[r0.x + 1].xyzw
mov o1.xyz, cb2[r0.x + 0].xyzx
mov o2.xyz, v0.xyzx
mov o2.w, l(1.000000)
ret 
// Approximately 7 instruction slots used
