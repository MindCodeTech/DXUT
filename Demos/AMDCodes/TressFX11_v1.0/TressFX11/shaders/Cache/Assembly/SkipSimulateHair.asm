//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T cs_5_0 /O1 /E SkipSimulateHair shaders\Source\HairSimulate.hlsl /Fo
//    Shaders\Cache\Object\Release\SkipSimulateHair.obj /Fe
//    Shaders\Cache\Error\SkipSimulateHair.txt /Fc
//    Shaders\Cache\Assembly\SkipSimulateHair.asm
//
//
// Buffer Definitions: 
//
// cbuffer ConstBufferCS_Per_Frame
// {
//
//   row_major float4x4 g_ModelTransformForHead;// Offset:    0 Size:    64
//   row_major float4x4 g_ModelPrevInvTransformForHead;// Offset:   64 Size:    64
//   float4 g_ModelRotateForHead;       // Offset:  128 Size:    16 [unused]
//   float4 g_Wind;                     // Offset:  144 Size:    16 [unused]
//   float4 g_Wind1;                    // Offset:  160 Size:    16 [unused]
//   float4 g_Wind2;                    // Offset:  176 Size:    16 [unused]
//   float4 g_Wind3;                    // Offset:  192 Size:    16 [unused]
//   int g_NumLengthConstraintIterations;// Offset:  208 Size:     4 [unused]
//   int g_bCollision;                  // Offset:  212 Size:     4 [unused]
//   float g_GravityMagnitude;          // Offset:  216 Size:     4 [unused]
//   float g_TimeStep;                  // Offset:  220 Size:     4 [unused]
//   float g_Damping0;                  // Offset:  224 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching0;// Offset:  228 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching0;// Offset:  232 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange0;// Offset:  236 Size:     4 [unused]
//   float g_Damping1;                  // Offset:  240 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching1;// Offset:  244 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching1;// Offset:  248 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange1;// Offset:  252 Size:     4 [unused]
//   float g_Damping2;                  // Offset:  256 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching2;// Offset:  260 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching2;// Offset:  264 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange2;// Offset:  268 Size:     4 [unused]
//   float g_Damping3;                  // Offset:  272 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching3;// Offset:  276 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching3;// Offset:  280 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange3;// Offset:  284 Size:     4 [unused]
//
// }
//
// Resource bind info for g_GuideHairVertexPositions
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_GuideHairVertexPositionsPrev
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_GuideHairVerticesOffsetsSRV     texture    sint         buf    0        1
// g_GuideHairVertexPositions            UAV  struct         r/w    0        1
// g_GuideHairVertexPositionsPrev        UAV  struct         r/w    1        1
// ConstBufferCS_Per_Frame           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_resource_buffer (sint,sint,sint,sint) t0
dcl_uav_structured u0, 16
dcl_uav_structured u1, 16
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_temps 3
dcl_thread_group 64, 1, 1
if_nz vThreadGroupID.x
  iadd r0.x, vThreadGroupID.x, l(-1)
  ld_indexable(buffer)(sint,sint,sint,sint) r0.x, r0.xxxx, t0.xyzw
else 
  mov r0.x, l(0)
endif 
ld_indexable(buffer)(sint,sint,sint,sint) r0.y, vThreadGroupID.xxxx, t0.yxzw
iadd r0.y, r0.y, -r0.x
uge r0.z, vThreadIDInGroupFlattened.x, r0.y
if_nz r0.z
  ret 
endif 
iadd r0.x, r0.x, vThreadIDInGroupFlattened.x
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyz, r0.x, l(0), u1.xyzx
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, l(0), u0.xyzx
ilt r0.y, vThreadIDInGroupFlattened.x, r0.y
if_nz r0.y
  mul r0.yzw, r1.yyyy, cb0[5].xxyz
  mad r0.yzw, r1.xxxx, cb0[4].xxyz, r0.yyzw
  mad r0.yzw, r1.zzzz, cb0[6].xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, cb0[7].xxyz
  mul r1.xyz, r0.zzzz, cb0[1].xyzx
  mad r1.xyz, r0.yyyy, cb0[0].xyzx, r1.xyzx
  mad r0.yzw, r0.wwww, cb0[2].xxyz, r1.xxyz
  add r0.yzw, r0.yyzw, cb0[3].xxyz
  mul r1.xyz, r2.yyyy, cb0[5].xyzx
  mad r1.xyz, r2.xxxx, cb0[4].xyzx, r1.xyzx
  mad r1.xyz, r2.zzzz, cb0[6].xyzx, r1.xyzx
  add r1.xyz, r1.xyzx, cb0[7].xyzx
  mul r2.xyz, r1.yyyy, cb0[1].xyzx
  mad r1.xyw, r1.xxxx, cb0[0].xyxz, r2.xyxz
  mad r1.xyz, r1.zzzz, cb0[2].xyzx, r1.xywx
  add r1.xyz, r1.xyzx, cb0[3].xyzx
  store_structured u1.xyz, r0.x, l(0), r0.yzwy
  store_structured u0.xyz, r0.x, l(0), r1.xyzx
endif 
ret 
// Approximately 37 instruction slots used
