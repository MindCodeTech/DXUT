//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T ps_5_0 /O1 /E PS_RenderScene shaders\Source\renderscene.hlsl /Fo
//    Shaders\Cache\Object\Release\PS_RenderScene.obj /Fe
//    Shaders\Cache\Error\PS_RenderScene.txt /Fc
//    Shaders\Cache\Assembly\PS_RenderScene.asm
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mWorld;                 // Offset:    0 Size:    64 [unused]
//   float4x4 g_mViewProj;              // Offset:   64 Size:    64 [unused]
//   float4x4 g_mInvViewProj;           // Offset:  128 Size:    64 [unused]
//   float4x4 g_mViewProjLight;         // Offset:  192 Size:    64
//   float3 g_vEye;                     // Offset:  256 Size:    12
//   float g_fvFov;                     // Offset:  268 Size:     4 [unused]
//   float4 g_AmbientLightColor;        // Offset:  272 Size:    16
//   float4 g_PointLightColor;          // Offset:  288 Size:    16
//   float4 g_PointLightPos;            // Offset:  304 Size:    16
//   float4 g_MatBaseColor;             // Offset:  320 Size:    16 [unused]
//   float4 g_MatKValue;                // Offset:  336 Size:    16 [unused]
//   float g_FiberAlpha;                // Offset:  352 Size:     4 [unused]
//   float g_HairShadowAlpha;           // Offset:  356 Size:     4 [unused]
//   float g_bExpandPixels;             // Offset:  360 Size:     4 [unused]
//   float g_FiberRadius;               // Offset:  364 Size:     4
//   float g_fHairKs2;                  // Offset:  368 Size:     4 [unused]
//   float g_fHairEx2;                  // Offset:  372 Size:     4 [unused]
//   float2 g_WinSize;                  // Offset:  376 Size:     8 [unused]
//   float g_FiberSpacing;              // Offset:  384 Size:     4
//   float g_bThinTip;                  // Offset:  388 Size:     4 [unused]
//   float g_fNearLight;                // Offset:  392 Size:     4
//   float g_fFarLight;                 // Offset:  396 Size:     4
//   int g_iTechSM;                     // Offset:  400 Size:     4
//   int g_bUseCoverage;                // Offset:  404 Size:     4 [unused]
//   int g_bUseAltCoverage;             // Offset:  408 Size:     4 [unused]
//   int g_iStrandCopies;               // Offset:  412 Size:     4 [unused]
//
// }
//
// cbuffer cbPerMaterial
// {
//
//   float4 g_MatAmbient;               // Offset:    0 Size:    16
//   float4 g_MatDiffuse;               // Offset:   16 Size:    16
//   float4 g_MatSpecular;              // Offset:   32 Size:    16
//   float4 g_ScalpColor;               // Offset:   48 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_samLinearWrap                   sampler      NA          NA    0        1
// g_samPointClamp                   sampler      NA          NA    1        1
// g_samShadow                     sampler_c      NA          NA    2        1
// g_txSMScene                       texture  float4          2d    2        1
// g_txSMHair                        texture  float4          2d    3        1
// g_txObj                           texture  float4          2d    4        1
// cbPerFrame                        cbuffer      NA          NA    0        1
// cbPerMaterial                     cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// TEXCOORD                 0   xyz         1     NONE  float   xyz 
// TEXCOORD                 1   xy          2     NONE  float   xy  
// TEXCOORD                 2   xyz         3     NONE  float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 6
ieq r0.x, cb0[25].x, l(2)
if_nz r0.x
  mov r0.xyz, v3.xyzx
  mov r0.w, l(1.000000)
  dp4 r1.x, r0.xyzw, cb0[12].xyzw
  dp4 r1.y, r0.xyzw, cb0[13].xyzw
  dp4 r1.z, r0.xyzw, cb0[14].xyzw
  dp4 r0.x, r0.xyzw, cb0[15].xyzw
  div r0.yw, r1.xxxz, r0.xxxx
  add r2.x, r0.y, l(1.000000)
  div r0.y, -r1.y, r0.x
  add r2.y, r0.y, l(1.000000)
  mul r0.yz, r2.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
  mul r0.w, r0.w, l(0.990000)
  sample_c_lz_indexable(-1,-1,0)(texture2d)(float,float,float,float) r1.x, r0.yzyy, t2.xxxx, s2, r0.w
  sample_l_indexable(-1,-1,0)(texture2d)(float,float,float,float) r1.y, r0.yzyy, t3.yxzw, s1, l(0.000000)
  add r1.z, -cb0[24].z, cb0[24].w
  mul r1.y, r1.z, r1.y
  div r1.y, r1.y, cb0[24].w
  add r1.y, -r1.y, l(1.000000)
  div r1.y, cb0[24].z, r1.y
  add r1.y, r0.x, -r1.y
  max r1.y, r1.y, l(0.000000)
  mul r1.w, cb0[22].w, cb0[24].x
  div r2.x, r1.y, r1.w
  lt r1.y, l(0.000010), r1.y
  add r2.y, r2.x, l(1.000000)
  movc r1.y, r1.y, r2.y, r2.x
  mul r1.y, r1.y, l(-0.001443)
  exp r1.y, r1.y
  sample_c_lz_indexable(-1,0,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mul r2.x, r2.x, l(0.113283)
  mad r1.x, r1.x, l(0.031497), r2.x
  sample_l_indexable(-1,0,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mul r2.x, r2.x, l(0.113283)
  mad r1.y, r1.y, l(0.031497), r2.x
  sample_c_lz_indexable(-1,1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mad r1.x, r2.x, l(0.031497), r1.x
  sample_l_indexable(-1,1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mad r1.y, r2.x, l(0.031497), r1.y
  sample_c_lz_indexable(0,-1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mad r1.x, r2.x, l(0.113283), r1.x
  sample_l_indexable(0,-1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mad r1.y, r2.x, l(0.113283), r1.y
  sample_c_lz_indexable(0,0,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mad r1.x, r2.x, l(0.407437), r1.x
  sample_l_indexable(0,0,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mad r1.y, r2.x, l(0.407437), r1.y
  sample_c_lz_indexable(0,1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mad r1.x, r2.x, l(0.113283), r1.x
  sample_l_indexable(0,1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mad r1.y, r2.x, l(0.113283), r1.y
  sample_c_lz_indexable(1,-1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mad r1.x, r2.x, l(0.031497), r1.x
  sample_l_indexable(1,-1,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mad r1.y, r2.x, l(0.031497), r1.y
  sample_c_lz_indexable(1,0,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t2.xxxx, s2, r0.w
  mad r1.x, r2.x, l(0.113283), r1.x
  sample_l_indexable(1,0,0)(texture2d)(float,float,float,float) r2.x, r0.yzyy, t3.xyzw, s1, l(0.000000)
  mul r2.x, r1.z, r2.x
  div r2.x, r2.x, cb0[24].w
  add r2.x, -r2.x, l(1.000000)
  div r2.x, cb0[24].z, r2.x
  add r2.x, r0.x, -r2.x
  max r2.x, r2.x, l(0.000000)
  div r2.y, r2.x, r1.w
  lt r2.x, l(0.000010), r2.x
  add r2.z, r2.y, l(1.000000)
  movc r2.x, r2.x, r2.z, r2.y
  mul r2.x, r2.x, l(-0.001443)
  exp r2.x, r2.x
  mad r1.y, r2.x, l(0.113283), r1.y
  sample_c_lz_indexable(1,1,0)(texture2d)(float,float,float,float) r0.w, r0.yzyy, t2.xxxx, s2, r0.w
  mad r0.w, r0.w, l(0.031497), r1.x
  sample_l_indexable(1,1,0)(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.yxzw, s1, l(0.000000)
  mul r0.y, r1.z, r0.y
  div r0.y, r0.y, cb0[24].w
  add r0.y, -r0.y, l(1.000000)
  div r0.y, cb0[24].z, r0.y
  add r0.x, -r0.y, r0.x
  max r0.x, r0.x, l(0.000000)
  div r0.y, r0.x, r1.w
  lt r0.x, l(0.000010), r0.x
  add r0.z, r0.y, l(1.000000)
  movc r0.x, r0.x, r0.z, r0.y
  mul r0.x, r0.x, l(-0.001443)
  exp r0.x, r0.x
  mad r0.x, r0.x, l(0.031497), r1.y
  mul r0.y, r0.x, l(1.013629)
  mul r0.x, r0.w, l(1.013629)
else 
  mov r0.xy, l(1.000000,1.000000,0,0)
endif 
mul r0.x, r0.x, r0.y
mad r0.x, r0.x, l(0.950000), l(0.050000)
add r0.yzw, -v3.xxyz, cb0[19].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, v1.xyzx, v1.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v1.xyzx
dp3 r1.w, r1.xyzx, r0.yzwy
max r1.w, r1.w, l(0.000000)
add r2.xyz, -v3.xyzx, cb0[16].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mad r0.yzw, r2.xxyz, r2.wwww, r0.yyzw
dp3 r2.x, r0.yzwy, r0.yzwy
rsq r2.x, r2.x
mul r0.yzw, r0.yyzw, r2.xxxx
dp3 r0.y, r0.yzwy, r1.xyzx
max r0.y, r0.y, l(0.000000)
lt r0.z, l(0.000000), cb1[1].w
if_nz r0.z
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v2.xyxx, t4.xyzw, s0
  eq r1.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r0.z, r1.y, r1.x
  and r0.z, r1.z, r0.z
  mul r3.xyzw, l(0.700000, 0.700000, 0.700000, 0.700000), cb1[3].xyzw
  mul r4.xyzw, r2.xyzw, cb1[0].xyzw
  mov r5.xyz, cb1[1].xyzx
  mov r5.w, l(1.000000)
  mul r2.xyzw, r2.xyzw, r5.xyzw
  movc r4.xyzw, r0.zzzz, r3.xyzw, r4.xyzw
  movc r2.xyzw, r0.zzzz, r3.xyzw, r2.xyzw
  movc r0.y, r0.z, l(0), r0.y
else 
  mov r4.xyzw, cb1[0].xyzw
  mov r2.xyz, cb1[1].xyzx
  mov r2.w, l(1.000000)
endif 
mul r3.xyzw, r0.xxxx, cb0[18].xyzw
log r0.x, r0.y
mul r0.x, r0.x, cb1[2].w
exp r0.w, r0.x
mul r0.xyz, r0.wwww, cb1[2].xyzx
mad r0.xyzw, r2.xyzw, r1.wwww, r0.xyzw
mul r0.xyzw, r0.xyzw, r3.xyzw
mad o0.xyzw, r4.xyzw, cb0[17].xyzw, r0.xyzw
ret 
// Approximately 213 instruction slots used
