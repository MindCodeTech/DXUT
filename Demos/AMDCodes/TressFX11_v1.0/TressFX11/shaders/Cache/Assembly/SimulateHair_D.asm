//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T cs_5_0 /O1 /E SimulateHair_D shaders\Source\HairSimulate.hlsl /Fo
//    Shaders\Cache\Object\Release\SimulateHair_D.obj /Fe
//    Shaders\Cache\Error\SimulateHair_D.txt /Fc
//    Shaders\Cache\Assembly\SimulateHair_D.asm
//
//
// Buffer Definitions: 
//
// cbuffer ConstBufferCS_Per_Frame
// {
//
//   row_major float4x4 g_ModelTransformForHead;// Offset:    0 Size:    64
//   row_major float4x4 g_ModelPrevInvTransformForHead;// Offset:   64 Size:    64 [unused]
//   float4 g_ModelRotateForHead;       // Offset:  128 Size:    16 [unused]
//   float4 g_Wind;                     // Offset:  144 Size:    16 [unused]
//   float4 g_Wind1;                    // Offset:  160 Size:    16 [unused]
//   float4 g_Wind2;                    // Offset:  176 Size:    16 [unused]
//   float4 g_Wind3;                    // Offset:  192 Size:    16 [unused]
//   int g_NumLengthConstraintIterations;// Offset:  208 Size:     4 [unused]
//   int g_bCollision;                  // Offset:  212 Size:     4
//   float g_GravityMagnitude;          // Offset:  216 Size:     4 [unused]
//   float g_TimeStep;                  // Offset:  220 Size:     4 [unused]
//   float g_Damping0;                  // Offset:  224 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching0;// Offset:  228 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching0;// Offset:  232 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange0;// Offset:  236 Size:     4 [unused]
//   float g_Damping1;                  // Offset:  240 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching1;// Offset:  244 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching1;// Offset:  248 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange1;// Offset:  252 Size:     4 [unused]
//   float g_Damping2;                  // Offset:  256 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching2;// Offset:  260 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching2;// Offset:  264 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange2;// Offset:  268 Size:     4 [unused]
//   float g_Damping3;                  // Offset:  272 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching3;// Offset:  276 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching3;// Offset:  280 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange3;// Offset:  284 Size:     4 [unused]
//
// }
//
// Resource bind info for g_GuideHairVertexPositions
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_GuideHairVertexPositionsPrev
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_GuideHairVertexTangents
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_GuideHairVerticesOffsetsSRV     texture    sint         buf    0        1
// g_GuideHairVertexPositions            UAV  struct         r/w    0        1
// g_GuideHairVertexPositionsPrev        UAV  struct         r/w    1        1
// g_GuideHairVertexTangents             UAV  struct         r/w    2        1
// ConstBufferCS_Per_Frame           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[14], immediateIndexed
dcl_resource_buffer (sint,sint,sint,sint) t0
dcl_uav_structured u0, 16
dcl_uav_structured u1, 16
dcl_uav_structured u2, 16
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_temps 10
dcl_tgsm_structured g0, 16, 64
dcl_thread_group 64, 1, 1
ult r0.x, vThreadIDInGroupFlattened.x, l(32)
ishl r1.x, vThreadGroupID.x, l(1)
imad r2.x, vThreadGroupID.x, l(2), l(1)
iadd r2.y, vThreadIDInGroupFlattened.x, l(-32)
mov r1.y, vThreadIDInGroupFlattened.x
movc r0.xy, r0.xxxx, r1.xyxx, r2.xyxx
if_nz r0.x
  iadd r0.z, r0.x, l(-1)
  ld_indexable(buffer)(sint,sint,sint,sint) r0.z, r0.zzzz, t0.yzxw
else 
  mov r0.z, l(0)
endif 
iadd r0.w, r0.z, r0.y
ld_indexable(buffer)(sint,sint,sint,sint) r0.x, r0.xxxx, t0.xyzw
iadd r0.x, r0.x, -r0.z
umin r0.x, r0.x, l(32)
ult r0.z, r0.y, r0.x
if_nz r0.z
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), u0.xyzw
  store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), r1.xyzw
endif 
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyz, r0.w, l(0), u1.xyzx
sync_g_t
ilt r1.w, l(0), cb0[13].y
if_nz r1.w
  ld_structured r2.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
  lt r1.w, l(0.000000), r2.w
  if_nz r1.w
    mul r3.xyz, cb0[1].xyzx, l(92.000000, 92.000000, 92.000000, 0.000000)
    mad r3.xyz, cb0[0].xyzx, l(-0.095000, -0.095000, -0.095000, 0.000000), r3.xyzx
    mad r3.xyz, cb0[2].xyzx, l(-9.899000, -9.899000, -9.899000, 0.000000), r3.xyzx
    add r3.xyz, r3.xyzx, cb0[3].xyzx
    add r4.xyz, r3.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    add r5.xyz, r2.xyzx, -r3.xyzx
    add r6.xyz, -r2.xyzx, r4.xyzx
    lt r1.w, r5.y, l(0.000000)
    dp3 r2.w, r5.xyzx, r5.xyzx
    lt r3.w, r2.w, l(702.250000)
    rsq r2.w, r2.w
    mul r5.xzw, r2.wwww, r5.xxyz
    mad r5.xzw, r5.xxzw, l(26.500000, 0.000000, 26.500000, 26.500000), r3.xxyz
    movc r5.xzw, r3.wwww, r5.xxzw, r2.xxyz
    movc r7.xyz, r1.wwww, r5.xzwx, r2.xyzx
    lt r2.w, r6.y, l(0.000000)
    dp3 r3.w, r6.xyzx, r6.xyzx
    lt r3.w, r3.w, l(702.250000)
    dp3 r4.w, -r6.xyzx, -r6.xyzx
    rsq r4.w, r4.w
    mul r6.xzw, r4.wwww, -r6.xxyz
    mad r6.xzw, r6.xxzw, l(26.500000, 0.000000, 26.500000, 26.500000), r4.xxyz
    movc r6.xzw, r3.wwww, r6.xxzw, r7.xxyz
    movc r7.xyz, r2.wwww, r6.xzwx, r7.xyzx
    mul r3.xyz, r3.xyzx, r6.yyyy
    mad r3.xyz, r5.yyyy, r4.xyzx, r3.xyzx
    add r3.w, r5.y, r6.y
    div r3.xyz, r3.xyzx, r3.wwww
    add r3.xyz, r2.xyzx, -r3.xyzx
    dp3 r3.w, r3.xyzx, r3.xyzx
    lt r4.x, r3.w, l(702.250000)
    rsq r3.w, r3.w
    mul r4.yzw, r3.wwww, r3.xxyz
    add r8.xyz, -r1.xyzx, r2.xyzx
    mov r8.w, l(0)
    add r9.xyz, -r8.wyww, r8.xyzx
    mad r8.xyz, l(0.400000, 0.400000, 0.400000, 0.000000), r8.wyww, r1.xyzx
    mad r4.yzw, r4.yyzw, l(0.000000, 26.500000, 26.500000, 26.500000), r9.xxyz
    add r3.xyz, -r3.xyzx, r4.yzwy
    add r3.xyz, r3.xyzx, r8.xyzx
    movc r3.xyz, r4.xxxx, r3.xyzx, r7.xyzx
    movc r3.xyz, r2.wwww, r6.xzwx, r3.xyzx
    movc r3.xyz, r1.wwww, r5.xzwx, r3.xyzx
    mul r4.xyz, cb0[1].xyzx, l(93.707001, 93.707001, 93.707001, 0.000000)
    mad r4.xyz, cb0[0].xyzx, l(-0.405000, -0.405000, -0.405000, 0.000000), r4.xyzx
    mad r4.xyz, cb0[2].xyzx, l(5.111000, 5.111000, 5.111000, 0.000000), r4.xyzx
    add r4.xyz, r4.xyzx, cb0[3].xyzx
    add r5.xyz, r4.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    add r6.xyz, r3.xyzx, -r4.xyzx
    add r7.xyz, -r3.xyzx, r5.xyzx
    lt r1.w, r6.y, l(0.000000)
    dp3 r2.w, r6.xyzx, r6.xyzx
    lt r3.w, r2.w, l(581.436768)
    rsq r2.w, r2.w
    mul r6.xzw, r2.wwww, r6.xxyz
    mad r6.xzw, r6.xxzw, l(24.113001, 0.000000, 24.113001, 24.113001), r4.xxyz
    movc r6.xzw, r3.wwww, r6.xxzw, r3.xxyz
    movc r8.xyz, r1.wwww, r6.xzwx, r3.xyzx
    lt r2.w, r7.y, l(0.000000)
    dp3 r3.w, r7.xyzx, r7.xyzx
    lt r3.w, r3.w, l(581.436768)
    dp3 r4.w, -r7.xyzx, -r7.xyzx
    rsq r4.w, r4.w
    mul r7.xzw, r4.wwww, -r7.xxyz
    mad r7.xzw, r7.xxzw, l(24.113001, 0.000000, 24.113001, 24.113001), r5.xxyz
    movc r7.xzw, r3.wwww, r7.xxzw, r8.xxyz
    movc r8.xyz, r2.wwww, r7.xzwx, r8.xyzx
    mul r4.xyz, r4.xyzx, r7.yyyy
    mad r4.xyz, r6.yyyy, r5.xyzx, r4.xyzx
    add r3.w, r6.y, r7.y
    div r4.xyz, r4.xyzx, r3.wwww
    add r4.xyz, r3.xyzx, -r4.xyzx
    dp3 r3.w, r4.xyzx, r4.xyzx
    lt r4.w, r3.w, l(581.436768)
    rsq r3.w, r3.w
    mul r5.xyz, r3.wwww, r4.xyzx
    add r3.xyz, -r1.xyzx, r3.xyzx
    mov r3.w, l(0)
    add r9.xyz, -r3.wyww, r3.xyzx
    mad r3.xyz, l(0.400000, 0.400000, 0.400000, 0.000000), r3.wyww, r1.xyzx
    mad r5.xyz, r5.xyzx, l(24.113001, 24.113001, 24.113001, 0.000000), r9.xyzx
    add r4.xyz, -r4.xyzx, r5.xyzx
    add r3.xyz, r3.xyzx, r4.xyzx
    movc r3.xyz, r4.wwww, r3.xyzx, r8.xyzx
    movc r3.xyz, r2.wwww, r7.xzwx, r3.xyzx
    movc r3.xyz, r1.wwww, r6.xzwx, r3.xyzx
    mul r4.xyz, cb0[1].xyzx, l(68.547997, 68.547997, 68.547997, 0.000000)
    mad r4.xyz, cb0[0].xyzx, l(-0.072000, -0.072000, -0.072000, 0.000000), r4.xyzx
    mad r4.xyz, cb0[2].xyzx, l(10.561000, 10.561000, 10.561000, 0.000000), r4.xyzx
    add r4.xyz, r4.xyzx, cb0[3].xyzx
    add r5.xyz, r4.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    add r6.xyz, r3.xyzx, -r4.xyzx
    add r7.xyz, -r3.xyzx, r5.xyzx
    lt r1.w, r6.y, l(0.000000)
    dp3 r2.w, r6.xyzx, r6.xyzx
    lt r3.w, r2.w, l(650.250000)
    rsq r2.w, r2.w
    mul r6.xzw, r2.wwww, r6.xxyz
    mad r6.xzw, r6.xxzw, l(25.500000, 0.000000, 25.500000, 25.500000), r4.xxyz
    movc r6.xzw, r3.wwww, r6.xxzw, r3.xxyz
    movc r8.xyz, r1.wwww, r6.xzwx, r3.xyzx
    lt r2.w, r7.y, l(0.000000)
    dp3 r3.w, r7.xyzx, r7.xyzx
    lt r3.w, r3.w, l(650.250000)
    dp3 r4.w, -r7.xyzx, -r7.xyzx
    rsq r4.w, r4.w
    mul r7.xzw, r4.wwww, -r7.xxyz
    mad r7.xzw, r7.xxzw, l(25.500000, 0.000000, 25.500000, 25.500000), r5.xxyz
    movc r7.xzw, r3.wwww, r7.xxzw, r8.xxyz
    movc r8.xyz, r2.wwww, r7.xzwx, r8.xyzx
    mul r4.xyz, r4.xyzx, r7.yyyy
    mad r4.xyz, r6.yyyy, r5.xyzx, r4.xyzx
    add r3.w, r6.y, r7.y
    div r4.xyz, r4.xyzx, r3.wwww
    add r4.xyz, r3.xyzx, -r4.xyzx
    dp3 r3.w, r4.xyzx, r4.xyzx
    lt r4.w, r3.w, l(650.250000)
    rsq r3.w, r3.w
    mul r5.xyz, r3.wwww, r4.xyzx
    add r3.xyz, -r1.xyzx, r3.xyzx
    mov r3.w, l(0)
    add r9.xyz, -r3.wyww, r3.xyzx
    mad r1.xyz, l(0.400000, 0.400000, 0.400000, 0.000000), r3.wyww, r1.xyzx
    mad r3.xyz, r5.xyzx, l(25.500000, 25.500000, 25.500000, 0.000000), r9.xyzx
    add r3.xyz, -r4.xyzx, r3.xyzx
    add r1.xyz, r1.xyzx, r3.xyzx
    movc r1.xyz, r4.wwww, r1.xyzx, r8.xyzx
    movc r1.xyz, r2.wwww, r7.xzwx, r1.xyzx
    movc r2.xyz, r1.wwww, r6.xzwx, r1.xyzx
  endif 
  store_structured g0.xyz, vThreadIDInGroupFlattened.x, l(0), r2.xyzx
endif 
sync_g_t
iadd r0.x, r0.x, l(-1)
ult r0.x, r0.y, r0.x
if_nz r0.x
  iadd r0.x, vThreadIDInGroupFlattened.x, l(1)
  ld_structured r1.xyz, r0.x, l(0), g0.xyzx
  ld_structured r2.xyz, vThreadIDInGroupFlattened.x, l(0), g0.xyzx
  add r1.xyz, r1.xyzx, -r2.xyzx
  dp3 r0.x, r1.xyzx, r1.xyzx
  rsq r0.x, r0.x
  mul r1.xyz, r0.xxxx, r1.xyzx
  store_structured u2.xyz, r0.w, l(0), r1.xyzx
endif 
if_nz r0.z
  ld_structured r1.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
  store_structured u0.xyzw, r0.w, l(0), r1.xyzw
endif 
ret 
// Approximately 178 instruction slots used
