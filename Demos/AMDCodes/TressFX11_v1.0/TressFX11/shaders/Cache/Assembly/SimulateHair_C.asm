//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T cs_5_0 /O1 /E SimulateHair_C shaders\Source\HairSimulate.hlsl /Fo
//    Shaders\Cache\Object\Release\SimulateHair_C.obj /Fe
//    Shaders\Cache\Error\SimulateHair_C.txt /Fc
//    Shaders\Cache\Assembly\SimulateHair_C.asm
//
//
// Buffer Definitions: 
//
// cbuffer ConstBufferCS_Per_Frame
// {
//
//   row_major float4x4 g_ModelTransformForHead;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 g_ModelPrevInvTransformForHead;// Offset:   64 Size:    64 [unused]
//   float4 g_ModelRotateForHead;       // Offset:  128 Size:    16 [unused]
//   float4 g_Wind;                     // Offset:  144 Size:    16
//   float4 g_Wind1;                    // Offset:  160 Size:    16
//   float4 g_Wind2;                    // Offset:  176 Size:    16
//   float4 g_Wind3;                    // Offset:  192 Size:    16
//   int g_NumLengthConstraintIterations;// Offset:  208 Size:     4
//   int g_bCollision;                  // Offset:  212 Size:     4 [unused]
//   float g_GravityMagnitude;          // Offset:  216 Size:     4 [unused]
//   float g_TimeStep;                  // Offset:  220 Size:     4
//   float g_Damping0;                  // Offset:  224 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching0;// Offset:  228 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching0;// Offset:  232 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange0;// Offset:  236 Size:     4 [unused]
//   float g_Damping1;                  // Offset:  240 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching1;// Offset:  244 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching1;// Offset:  248 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange1;// Offset:  252 Size:     4 [unused]
//   float g_Damping2;                  // Offset:  256 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching2;// Offset:  260 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching2;// Offset:  264 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange2;// Offset:  268 Size:     4 [unused]
//   float g_Damping3;                  // Offset:  272 Size:     4 [unused]
//   float g_StiffnessForLocalShapeMatching3;// Offset:  276 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching3;// Offset:  280 Size:     4 [unused]
//   float g_GlobalShapeMatchingEffectiveRange3;// Offset:  284 Size:     4 [unused]
//
// }
//
// Resource bind info for g_GuideHairVertexPositions
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_GuideHairVerticesOffsetsSRV     texture    sint         buf    0        1
// g_GuideHairRestLengthSRV          texture   float         buf    1        1
// g_GuideHairVertexPositions            UAV  struct         r/w    0        1
// ConstBufferCS_Per_Frame           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[14], immediateIndexed
dcl_resource_buffer (sint,sint,sint,sint) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_uav_structured u0, 16
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_temps 6
dcl_tgsm_structured g0, 16, 64
dcl_tgsm_structured g1, 4, 64
dcl_thread_group 64, 1, 1
ult r0.x, vThreadIDInGroupFlattened.x, l(32)
ishl r1.x, vThreadGroupID.x, l(1)
imad r2.x, vThreadGroupID.x, l(2), l(1)
iadd r2.y, vThreadIDInGroupFlattened.x, l(-32)
mov r1.y, vThreadIDInGroupFlattened.x
mov r1.z, l(0)
mov r2.z, l(32)
movc r0.xyz, r0.xxxx, r1.xyzx, r2.xyzx
if_nz r0.x
  iadd r0.w, r0.x, l(-1)
  ld_indexable(buffer)(sint,sint,sint,sint) r0.w, r0.wwww, t0.yzwx
else 
  mov r0.w, l(0)
endif 
iadd r1.x, r0.w, r0.y
ld_indexable(buffer)(sint,sint,sint,sint) r1.y, r0.xxxx, t0.yxzw
iadd r0.w, r1.y, -r0.w
umin r0.w, r0.w, l(32)
ult r1.y, r0.y, r0.w
if_nz r1.y
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r2.xyzw, r1.x, l(0), u0.xyzw
  store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), r2.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.z, r1.xxxx, t1.yzxw
  store_structured g1.x, vThreadIDInGroupFlattened.x, l(0), r1.z
endif 
sync_g_t
ne r2.xyz, cb0[9].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r1.z, r2.y, r2.x
or r1.z, r2.z, r1.z
if_nz r1.z
  uge r1.z, r0.y, l(2)
  iadd r1.w, r0.w, l(-1)
  ult r1.w, r0.y, r1.w
  and r1.z, r1.w, r1.z
  if_nz r1.z
    udiv null, r0.x, r0.x, l(20)
    utof r0.x, r0.x
    mul r1.z, r0.x, l(0.050000)
    mad r0.x, -r0.x, l(0.050000), l(1.000000)
    mul r2.xyz, r0.xxxx, cb0[10].xyzx
    mad r2.xyz, r1.zzzz, cb0[9].xyzx, r2.xyzx
    mad r2.xyz, r1.zzzz, cb0[11].xyzx, r2.xyzx
    mad r2.xyz, r0.xxxx, cb0[12].xyzx, r2.xyzx
    ld_structured r3.xyz, vThreadIDInGroupFlattened.x, l(0), g0.xyzx
    iadd r0.x, vThreadIDInGroupFlattened.x, l(1)
    ld_structured r4.xyz, r0.x, l(0), g0.xyzx
    add r4.xyz, r3.yzxy, -r4.yzxy
    mul r5.xyz, r2.xyzx, r4.xyzx
    mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
    mul r5.xyz, r4.xyzx, r2.xyzx
    mad r2.xyz, r2.zxyz, r4.yzxy, -r5.xyzx
    mul r0.x, cb0[13].w, cb0[13].w
    mad r2.xyz, r0.xxxx, -r2.xyzx, r3.xyzx
    store_structured g0.xyz, vThreadIDInGroupFlattened.x, l(0), r2.xyzx
  endif 
endif 
sync_g_t
utof r0.x, r0.w
mul r0.x, r0.x, l(0.500000)
round_ni r0.x, r0.x
iadd r0.w, r0.w, l(-1)
utof r0.w, r0.w
mul r0.w, r0.w, l(0.500000)
round_ni r0.w, r0.w
ftou r0.xw, r0.xxxw
ishl r1.z, r0.y, l(1)
iadd r0.z, r1.z, r0.z
ult r0.x, r0.y, r0.x
ult r0.y, r0.y, r0.w
iadd r0.w, l(1), r0.z
iadd r1.z, r0.z, l(2)
mov r1.w, l(0)
loop 
  ige r2.x, r1.w, cb0[13].x
  breakc_nz r2.x
  if_nz r0.x
    ld_structured r2.xyzw, r0.z, l(0), g0.xyzw
    ld_structured r3.xyzw, r0.w, l(0), g0.xyzw
    ld_structured r4.x, r0.z, l(0), g1.xxxx
    add r4.yzw, -r2.xxyz, r3.xxyz
    dp3 r5.x, r4.yzwy, r4.yzwy
    sqrt r5.x, r5.x
    max r5.x, r5.x, l(0.000000)
    div r4.x, r4.x, r5.x
    add r4.x, -r4.x, l(1.000000)
    mul r4.xyz, r4.yzwy, r4.xxxx
    lt r2.w, l(0.000000), r2.w
    lt r3.w, l(0.000000), r3.w
    movc r5.xy, r3.wwww, l(0.500000,0.500000,0,0), l(1.000000,0,0,0)
    and r5.zw, r3.wwww, l(0, 0, 0, 0x3f800000)
    movc r5.xy, r2.wwww, r5.xyxx, r5.zwzz
    mad r2.xyz, r5.xxxx, r4.xyzx, r2.xyzx
    mad r3.xyz, -r5.yyyy, r4.xyzx, r3.xyzx
    store_structured g0.xyz, r0.z, l(0), r2.xyzx
    store_structured g0.xyz, r0.w, l(0), r3.xyzx
  endif 
  sync_g_t
  if_nz r0.y
    ld_structured r2.xyzw, r0.w, l(0), g0.xyzw
    ld_structured r3.xyzw, r1.z, l(0), g0.xyzw
    ld_structured r4.x, r0.w, l(0), g1.xxxx
    add r4.yzw, -r2.xxyz, r3.xxyz
    dp3 r5.x, r4.yzwy, r4.yzwy
    sqrt r5.x, r5.x
    max r5.x, r5.x, l(0.000000)
    div r4.x, r4.x, r5.x
    add r4.x, -r4.x, l(1.000000)
    mul r4.xyz, r4.yzwy, r4.xxxx
    lt r2.w, l(0.000000), r2.w
    lt r3.w, l(0.000000), r3.w
    movc r5.xy, r3.wwww, l(0.500000,0.500000,0,0), l(1.000000,0,0,0)
    and r5.zw, r3.wwww, l(0, 0, 0, 0x3f800000)
    movc r5.xy, r2.wwww, r5.xyxx, r5.zwzz
    mad r2.xyz, r5.xxxx, r4.xyzx, r2.xyzx
    mad r3.xyz, -r5.yyyy, r4.xyzx, r3.xyzx
    store_structured g0.xyz, r0.w, l(0), r2.xyzx
    store_structured g0.xyz, r1.z, l(0), r3.xyzx
  endif 
  sync_g_t
  iadd r1.w, r1.w, l(1)
endloop 
if_nz r1.y
  ld_structured r0.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
  store_structured u0.xyzw, r1.x, l(0), r0.xyzw
endif 
ret 
// Approximately 126 instruction slots used
