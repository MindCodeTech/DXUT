//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T cs_5_0 /O1 /E SimulateHair_A shaders\Source\HairSimulate.hlsl /Fo
//    Shaders\Cache\Object\Release\SimulateHair_A.obj /Fe
//    Shaders\Cache\Error\SimulateHair_A.txt /Fc
//    Shaders\Cache\Assembly\SimulateHair_A.asm
//
//
// Buffer Definitions: 
//
// cbuffer ConstBufferCS_Per_Frame
// {
//
//   row_major float4x4 g_ModelTransformForHead;// Offset:    0 Size:    64
//   row_major float4x4 g_ModelPrevInvTransformForHead;// Offset:   64 Size:    64 [unused]
//   float4 g_ModelRotateForHead;       // Offset:  128 Size:    16 [unused]
//   float4 g_Wind;                     // Offset:  144 Size:    16 [unused]
//   float4 g_Wind1;                    // Offset:  160 Size:    16 [unused]
//   float4 g_Wind2;                    // Offset:  176 Size:    16 [unused]
//   float4 g_Wind3;                    // Offset:  192 Size:    16 [unused]
//   int g_NumLengthConstraintIterations;// Offset:  208 Size:     4 [unused]
//   int g_bCollision;                  // Offset:  212 Size:     4 [unused]
//   float g_GravityMagnitude;          // Offset:  216 Size:     4
//   float g_TimeStep;                  // Offset:  220 Size:     4
//   float g_Damping0;                  // Offset:  224 Size:     4
//   float g_StiffnessForLocalShapeMatching0;// Offset:  228 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching0;// Offset:  232 Size:     4
//   float g_GlobalShapeMatchingEffectiveRange0;// Offset:  236 Size:     4
//   float g_Damping1;                  // Offset:  240 Size:     4
//   float g_StiffnessForLocalShapeMatching1;// Offset:  244 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching1;// Offset:  248 Size:     4
//   float g_GlobalShapeMatchingEffectiveRange1;// Offset:  252 Size:     4
//   float g_Damping2;                  // Offset:  256 Size:     4
//   float g_StiffnessForLocalShapeMatching2;// Offset:  260 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching2;// Offset:  264 Size:     4
//   float g_GlobalShapeMatchingEffectiveRange2;// Offset:  268 Size:     4
//   float g_Damping3;                  // Offset:  272 Size:     4
//   float g_StiffnessForLocalShapeMatching3;// Offset:  276 Size:     4 [unused]
//   float g_StiffnessForGlobalShapeMatching3;// Offset:  280 Size:     4
//   float g_GlobalShapeMatchingEffectiveRange3;// Offset:  284 Size:     4
//
// }
//
// Resource bind info for g_GuideHairVertexPositions
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_GuideHairVertexPositionsPrev
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_InitialGuideHairPositions
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_GuideHairVerticesOffsetsSRV     texture    sint         buf    0        1
// g_GuideHairStrandType             texture    sint         buf    2        1
// g_GuideHairVertexPositions            UAV  struct         r/w    0        1
// g_GuideHairVertexPositionsPrev        UAV  struct         r/w    1        1
// g_InitialGuideHairPositions           UAV  struct         r/w    3        1
// ConstBufferCS_Per_Frame           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[18], immediateIndexed
dcl_resource_buffer (sint,sint,sint,sint) t0
dcl_resource_buffer (sint,sint,sint,sint) t2
dcl_uav_structured u0, 16
dcl_uav_structured u1, 16
dcl_uav_structured u3, 16
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_temps 6
dcl_tgsm_structured g0, 16, 64
dcl_thread_group 64, 1, 1
ult r0.x, vThreadIDInGroupFlattened.x, l(32)
ishl r1.x, vThreadGroupID.x, l(1)
imad r2.x, vThreadGroupID.x, l(2), l(1)
iadd r2.y, vThreadIDInGroupFlattened.x, l(-32)
mov r1.y, vThreadIDInGroupFlattened.x
movc r0.xy, r0.xxxx, r1.xyxx, r2.xyxx
if_nz r0.x
  iadd r0.z, r0.x, l(-1)
  ld_indexable(buffer)(sint,sint,sint,sint) r0.w, r0.zzzz, t0.yzwx
  ld_indexable(buffer)(sint,sint,sint,sint) r0.z, r0.zzzz, t2.yzxw
else 
  mov r0.zw, l(0,0,0,0)
endif 
iadd r1.x, r0.w, r0.y
ld_indexable(buffer)(sint,sint,sint,sint) r0.x, r0.xxxx, t0.xyzw
iadd r0.x, r0.x, -r0.w
umin r0.x, r0.x, l(32)
ult r0.w, r0.y, r0.x
if_nz r0.w
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r2.xyzw, r1.x, l(0), u0.xyzw
  store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), r2.xyzw
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r3.xyzw, r1.x, l(0), u3.xyzw
  mul r1.yzw, r3.yyyy, cb0[1].xxyz
  mad r1.yzw, r3.xxxx, cb0[0].xxyz, r1.yyzw
  mad r1.yzw, r3.zzzz, cb0[2].xxyz, r1.yyzw
  add r3.xyz, r1.yzwy, cb0[3].xyzx
  mov r4.xyz, r2.xyzx
else 
  mov r4.xyz, l(0,0,0,0)
  mov r2.w, l(0)
  mov r3.xyzw, l(0,0,0,0)
endif 
sync_g_t
if_nz r0.w
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.yzw, r1.x, l(0), u1.xxyz
  lt r0.w, l(0.000000), r2.w
  if_nz r0.w
    ieq r5.xyz, r0.zzzz, l(1, 2, 3, 0)
    and r0.w, r5.z, cb0[17].x
    movc r0.w, r5.y, cb0[16].x, r0.w
    movc r0.w, r5.x, cb0[15].x, r0.w
    movc r0.w, r0.z, r0.w, cb0[14].x
    mul r5.x, cb0[13].w, cb0[13].w
    add r0.w, -r0.w, l(1.000000)
    add r1.yzw, -r1.yyzw, r4.xxyz
    mad r1.yzw, r0.wwww, r1.yyzw, r4.xxyz
    mul r0.w, r5.x, cb0[13].z
    mad r2.xyz, r0.wwww, l(0.000000, -1.000000, 0.000000, 0.000000), r1.yzwy
    mov r5.xyzw, r2.xyzw
  else 
    mov r5.xyzw, r3.xyzw
  endif 
  store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), r5.xyzw
endif 
ieq r1.yzw, r0.zzzz, l(0, 1, 2, 3)
and r2.xy, r1.wwww, cb0[17].zwzz
movc r1.zw, r1.zzzz, cb0[16].zzzw, r2.xxxy
movc r1.yz, r1.yyyy, cb0[15].zzwz, r1.zzwz
movc r0.zw, r0.zzzz, r1.yyyz, cb0[14].zzzw
lt r1.y, l(0.000000), r0.z
ne r1.z, l(0.000000, 0.000000, 0.000000, 0.000000), r0.w
and r1.y, r1.z, r1.y
if_nz r1.y
  ld_structured r1.y, vThreadIDInGroupFlattened.x, l(12), g0.xxxx
  lt r1.y, l(0.000000), r1.y
  if_nz r1.y
    utof r1.yz, r0.yyxy
    mul r0.w, r0.w, r1.z
    lt r0.w, r1.y, r0.w
    if_nz r0.w
      ld_structured r1.yzw, vThreadIDInGroupFlattened.x, l(0), g0.xxyz
      add r2.xyz, -r1.yzwy, r3.xyzx
      mad r1.yzw, r0.zzzz, r2.xxyz, r1.yyzw
      store_structured g0.xyz, vThreadIDInGroupFlattened.x, l(0), r1.yzwy
    endif 
  endif 
endif 
ilt r0.x, r0.y, r0.x
if_nz r0.x
  ld_structured r0.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
  mov r4.w, r2.w
  store_structured u1.xyzw, r1.x, l(0), r4.xyzw
  store_structured u0.xyzw, r1.x, l(0), r0.xyzw
endif 
ret 
// Approximately 85 instruction slots used
