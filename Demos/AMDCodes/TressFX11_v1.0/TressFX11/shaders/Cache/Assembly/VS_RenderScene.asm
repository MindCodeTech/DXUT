//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T vs_5_0 /O1 /E VS_RenderScene shaders\Source\renderscene.hlsl /Fo
//    Shaders\Cache\Object\Release\VS_RenderScene.obj /Fe
//    Shaders\Cache\Error\VS_RenderScene.txt /Fc
//    Shaders\Cache\Assembly\VS_RenderScene.asm
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mWorld;                 // Offset:    0 Size:    64
//   float4x4 g_mViewProj;              // Offset:   64 Size:    64
//   float4x4 g_mInvViewProj;           // Offset:  128 Size:    64 [unused]
//   float4x4 g_mViewProjLight;         // Offset:  192 Size:    64 [unused]
//   float3 g_vEye;                     // Offset:  256 Size:    12 [unused]
//   float g_fvFov;                     // Offset:  268 Size:     4 [unused]
//   float4 g_AmbientLightColor;        // Offset:  272 Size:    16 [unused]
//   float4 g_PointLightColor;          // Offset:  288 Size:    16 [unused]
//   float4 g_PointLightPos;            // Offset:  304 Size:    16 [unused]
//   float4 g_MatBaseColor;             // Offset:  320 Size:    16 [unused]
//   float4 g_MatKValue;                // Offset:  336 Size:    16 [unused]
//   float g_FiberAlpha;                // Offset:  352 Size:     4 [unused]
//   float g_HairShadowAlpha;           // Offset:  356 Size:     4 [unused]
//   float g_bExpandPixels;             // Offset:  360 Size:     4 [unused]
//   float g_FiberRadius;               // Offset:  364 Size:     4 [unused]
//   float g_fHairKs2;                  // Offset:  368 Size:     4 [unused]
//   float g_fHairEx2;                  // Offset:  372 Size:     4 [unused]
//   float2 g_WinSize;                  // Offset:  376 Size:     8 [unused]
//   float g_FiberSpacing;              // Offset:  384 Size:     4 [unused]
//   float g_bThinTip;                  // Offset:  388 Size:     4 [unused]
//   float g_fNearLight;                // Offset:  392 Size:     4 [unused]
//   float g_fFarLight;                 // Offset:  396 Size:     4 [unused]
//   int g_iTechSM;                     // Offset:  400 Size:     4 [unused]
//   int g_bUseCoverage;                // Offset:  404 Size:     4 [unused]
//   int g_bUseAltCoverage;             // Offset:  408 Size:     4 [unused]
//   int g_iStrandCopies;               // Offset:  412 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerFrame                        cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// POSITION                 0   xyz         0     NONE  float   xyz 
// NORMAL                   0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xy          2     NONE  float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float   xyzw
// TEXCOORD                 0   xyz         1     NONE  float   xyz 
// TEXCOORD                 1   xy          2     NONE  float   xy  
// TEXCOORD                 2   xyz         3     NONE  float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xy
dcl_output o3.xyz
dcl_temps 2
mov r0.w, l(1.000000)
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb0[0].xyzw
dp4 r0.y, r1.xyzw, cb0[1].xyzw
dp4 r0.z, r1.xyzw, cb0[2].xyzw
dp4 o0.x, r0.xyzw, cb0[4].xyzw
dp4 o0.y, r0.xyzw, cb0[5].xyzw
dp4 o0.z, r0.xyzw, cb0[6].xyzw
dp4 o0.w, r0.xyzw, cb0[7].xyzw
mov o3.xyz, r0.xyzx
mov o1.xyz, v1.xyzx
mov o2.xy, v2.xyxx
ret 
// Approximately 14 instruction slots used
